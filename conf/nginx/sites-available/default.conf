server {
    listen 80;
    listen [::]:80;
    server_name _;

    root /var/www/html/;
    index index.php;

    #
    # Generic restrictions for things like PHP files in uploads
    #
    include /etc/nginx/includes/restrictions.conf;


    #
    # Generic redirect for things like 301, permanent
    #
    include /etc/nginx/includes/redirect.conf;

    #
    # Gzip rules
    #
    include /etc/nginx/includes/gzip.conf;

    #
    # WordPress Rules
    #
    #   {{#unless site.multiSite}}
    #include includes/wordpress-single.conf;
    #   {{else}}
    #   include /etc/nginx/includes/wordpress-multi.conf;
    #   {{/unless}}


    #add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    #Unwanted request types (include wanted types)
    if ($request_method = OPTIONS ) {
        return 403;
    }

    if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
        return 444;
    }

    # Httpoxy vulnerability
    proxy_set_header Proxy "";

    # Request URL overwrite
    proxy_set_header X-Original-URL "";
    proxy_set_header X-Rewrite-URL "";

    # Prevent Information leaks
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
    proxy_hide_header X-AspNetMvc-Version;
    proxy_hide_header X-AspNet-Version;

    # http://blog.portswigger.net/2017/07/cracking-lens-targeting-https-hidden.html
    proxy_set_header clientIPAddress "";
    proxy_set_header x-forwarded-for "";
    proxy_set_header client-ip "";
    proxy_set_header forwarded "";
    proxy_set_header from "";
    proxy_set_header referer "";
    proxy_set_header x-client-ip "";
    proxy_set_header x-originating-ip "";
    proxy_set_header x-wap-profile "";

    #
    # PHP-FPM
    #
    location ~ \.php$ {
        try_files $uri =404;

        #fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        #fastcgi_pass 127.0.0.1:9000;  
        fastcgi_pass php:9000;
        include /etc/nginx/includes/fastcgi_params;

        fastcgi_intercept_errors on;

        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 32 32k;
        fastcgi_read_timeout 1200s;

        proxy_buffer_size 64k;
        proxy_buffers 32 32k;
        proxy_busy_buffers_size 256k;
    }

 

    #
    # Static file rules
    #
    location ~* \.(?:css|js|txt)$ {
        access_log off;
        log_not_found off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        expires 30d;
        break;
    }

    location ~* \.(?:jpg|jpeg|gif|png|ico|xml|mp4|mp3|mid|wav|swf|flv|xls|xlsx|pdf)$ {
        access_log off;
        log_not_found off;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        expires 30d;
        break;
    }

    location ~* \.(?:eot|woff|woff2|ttf|svg|otf) {
        access_log off;
        log_not_found off;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        expires 30d;
        break;
    }

    location ~* \.(html|htm)$ {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        access_log off;
        expires off;
        if_modified_since off;
        break;
    }

    #Send health check status to AWS ELB
    location /health-check {
        access_log off;
        return 200;
        add_header Content-Type text/plain;
    }

    access_log /var/log/nginx/access.log main;
}